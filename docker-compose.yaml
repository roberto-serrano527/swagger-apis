version: "3.9"
services:
  mysql8:
    # docker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=msvc_usuarios -v data-mysql:/var/lib/mysql mysql:8
    container_name: mysql8
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: sasa
      MYSQL_DATABASE: raccoon_db
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    #No es necesario declarar la red ya que docker compose crea un red para todos los servicios declarados
    networks:
      - spring
  raccoon_post:
    # docker build -t usuarios . -f .\msvc-usuarios\Dockerfile
    # docker run -d -p 8001:8001 --env-file .\msvc-usuarios\.env --rm --name msvc-usuarios --network spring usuarios
    container_name: raccoon_post
#    build:
#      context: ./
#      dockerfile: ./msvc-usuarios/Dockerfile
    image: tiroloco/raccoon_post:latest
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      DB_HOST: mysql8:3306
      DB_DATABASE: raccoon_db
      DB_USERNAME: root
      DB_PASSWORD: sasa
      #create – Hibernate first drops existing tables and then creates new tables.
      #validate – Hibernate only validates whether the tables and columns exist; otherwise, it throws an exception.
      #https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
      JPA_DDL_AUTO: create
    networks:
      - spring
    depends_on:
      - mysql8
    restart: always
volumes:
  data-mysql:
    name: data-mysql

networks:
  spring:
    name: spring

#Para crear imagen (Actualizar cambios) "docker-compose up --build -d" 